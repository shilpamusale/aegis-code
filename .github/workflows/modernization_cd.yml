# In aegis-code/.github/workflows/modernization_cd.yml

name: Deploy to Google Cloud Run

on:
  # Trigger the workflow on pushes to the main branch
  push:
    branches:
      - main

env:
  # The GCP Project ID. Will be loaded from GitHub secrets.
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  # The name of your Cloud Run service.
  SERVICE: aegis-code-service
  # The name of your Artifact Registry repository.
  REPOSITORY: aegis-code-repo
  # The GCP region for your services.
  REGION: us-central1

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    # Add 'id-token' with 'write' permission for authentication.
    permissions:
      id-token: 'write'
      contents: 'read'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          # The Workload Identity Provider details.
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_ID_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WIF_POOL }}/providers/${{ secrets.GCP_WIF_PROVIDER }}'
          service_account: '${{ secrets.GCP_SA_EMAIL }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        run: |-
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # Point to the image we just pushed
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}

      # If you want to get the URL of the deployed service, you can use the output from the deploy step
      - name: Show Deployed URL
        run: echo "Service deployed to ${{ steps.deploy.outputs.url }}"
